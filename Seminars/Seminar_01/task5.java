/*
1.Пишем алгоритм поиска нужного числа последовательности Фибоначчи, но в этот раз
откажемся от рекурсии и воспользуемся обычным алгоритмом, что даст нам
линейную сложность, т.к. вычисление каждого из чисел последовательности будет
происходить ровно 1 раз.
2.Вариантов решения может быть несколько, но нужно предложить студентам считать
последовательность с первого числа и далее до тех пор, пока не доберемся до
нужного номера. При этом значение предыдущих элементов нужно сохранять, чтобы
не приходилось вычислять заново, как это происходило при рекурсивном методе.
 */
package Seminars.Seminar_01;

public class task5 {

    public static int fib_lin(int n) {
        final int[] numbers = new int[n+1];
        numbers[1] = 1;
        numbers[2] = 1;

        for (int i = 3; i <= n; i++)
            numbers[i] = numbers[i - 1] + numbers[i - 2];

        return numbers[n];
    }

    public static void main(String[] args) {
        System.out.println(fib_lin(10));
    }
}
